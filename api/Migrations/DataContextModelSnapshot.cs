// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace api.Migrations
{
    [DbContext(typeof(Data.DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("api.Models.Aluno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("sobrenome")
                        .HasColumnType("TEXT");

                    b.Property<string>("telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Marta",
                            sobrenome = "Kent",
                            telefone = "33225555"
                        },
                        new
                        {
                            id = 2,
                            nome = "Paula",
                            sobrenome = "Isabela",
                            telefone = "3354288"
                        },
                        new
                        {
                            id = 3,
                            nome = "Laura",
                            sobrenome = "Antonia",
                            telefone = "55668899"
                        },
                        new
                        {
                            id = 4,
                            nome = "Luiza",
                            sobrenome = "Maria",
                            telefone = "6565659"
                        },
                        new
                        {
                            id = 5,
                            nome = "Lucas",
                            sobrenome = "Machado",
                            telefone = "565685415"
                        },
                        new
                        {
                            id = 6,
                            nome = "Pedro",
                            sobrenome = "Alvares",
                            telefone = "456454545"
                        },
                        new
                        {
                            id = 7,
                            nome = "Paulo",
                            sobrenome = "José",
                            telefone = "9874512"
                        });
                });

            modelBuilder.Entity("api.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("alunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("disciplinaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("alunoId", "disciplinaId");

                    b.HasIndex("disciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            alunoId = 1,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 1,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 1,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 2,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 2,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 2,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 3,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 3,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 3,
                            disciplinaId = 3
                        },
                        new
                        {
                            alunoId = 4,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 4,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 4,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 5,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 5,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 3
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 3
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 5
                        });
                });

            modelBuilder.Entity("api.Models.Disciplina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("professorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("professorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Matemática",
                            professorId = 1
                        },
                        new
                        {
                            id = 2,
                            nome = "Física",
                            professorId = 2
                        },
                        new
                        {
                            id = 3,
                            nome = "Português",
                            professorId = 3
                        },
                        new
                        {
                            id = 4,
                            nome = "Inglês",
                            professorId = 4
                        },
                        new
                        {
                            id = 5,
                            nome = "Programação",
                            professorId = 5
                        });
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("sobrenome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Lauro",
                            sobrenome = "Ignacio"
                        },
                        new
                        {
                            id = 2,
                            nome = "Roberto",
                            sobrenome = "Staziak"
                        },
                        new
                        {
                            id = 3,
                            nome = "Ronaldo",
                            sobrenome = "Munhos"
                        },
                        new
                        {
                            id = 4,
                            nome = "Rodrigo",
                            sobrenome = "Diament"
                        },
                        new
                        {
                            id = 5,
                            nome = "Alexandre",
                            sobrenome = "Medeiros"
                        });
                });

            modelBuilder.Entity("api.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("api.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("alunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("disciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("api.Models.Disciplina", b =>
                {
                    b.HasOne("api.Models.Professor", "Professor")
                        .WithMany("disciplinas")
                        .HasForeignKey("professorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("api.Models.Professor", b =>
                {
                    b.Navigation("disciplinas");
                });
#pragma warning restore 612, 618
        }
    }
}
